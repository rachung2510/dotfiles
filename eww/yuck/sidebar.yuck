;; SIDEBAR

(defwidget time []
	(box :class "roundpannel time" :space-evenly "false" :orientation "v"
	(label :text time :class "label-time")
	(label :text date :class "label-date")))

(defwidget cava []
	(box :class "cava" :space-evenly "false" :orientation "v" :height "160"))

(defwidget player []
	(box :class "roundpannel player ${title == "" ? "disabled" : ""}" :space-evenly "false" :orientation "v" :height "125"
		(label :class "label-title" :text "${title != "" ? "${title}" : "Offline"}" :halign "middle" :limit-width "24" )
		(label :class "label-artist" :text "${artist != "" ? "${artist}" : ""}" :halign "middle" :limit-width "30")
		(literal :content "${title == "" ? 
			"(box :class 'labels' :orientation 'h' :spacing 20 :halign 'center' :space-evenly 'true'
				(button '玲')
				(button :class 'btn-play' play-icon)
				(button '怜'))" :
			"(box :class 'labels' :orientation 'h' :spacing 20 :halign 'center' :space-evenly 'true'
				(button :onclick 'playerctl -p playerctld previous' '玲')
				(button :class 'btn-play' :onclick 'bash scripts/player.sh action' play-icon)
				(button :onclick 'playerctl -p playerctld next' '怜'))"}")
))

(defvar settingspannel-height 200)
(defvar vol-literal "
	(slider
		:value volume-val
		:icon vol-icon
		:tooltip 'Volume: \${volume-val}%'
		:action-click 'amixer -D pulse set Master 1+ toggle &&
			eww update vol-icon=$(bash scripts/geticon.sh vol) &&
			eww update mute-bool=$(bash scripts/getbool.sh mute) &&
			eww update vol-literal=$(eww get vol-literal)'
		:action-slide 'amixer -D pulse sset Master {}%'
		:disabled mute-bool)
")
(defwidget settings []
	(box :class "settings roundpannel" :space-evenly "true" :orientation "v" :height settingspannel-height
		(literal :content vol-literal)
		(slider
			:value light-val
			:icon light-icon
			:tooltip "Brightness: ${light-val}%"
			:action-click "brightnessctl s 0"
			:action-slide ""
			:disabled "false")
		(slider
			:value batt-val
			:icon batt-icon
			:tooltip "Battery: ${batt-val}%"
			:action-click ""
			:action-slide ""
			:disabled "false")
))

(defwidget weather []
	(box :class "roundpannel weather" :space-evenly "true" :orientation "h" :width "180" :height settingspannel-height
	(box :space-evenly "false" :orientation "v"
		(box :space-evenly "false" :orientation "v" 
			(label :text weather-loc  :valign "start" :halign "start" :class "bold")
			(label :text weather-cond :valign "start" :halign "start" :xalign "0" :wrap "true" :limit-width "20")
			(label :class "label-weather" :text weather-temp :valign "start" :halign "start"))
		(box :class "weatherpannel" :space-evenly "false" :orientation "h" :halign "end" :valign "end"
			(button :tooltip "Current Weather: ${weather-cond}, ${weather-temp}" :onclick "" weather-icon)
		))
))

(defwidget ram []
	(radialmeter	
		:value "${ram-val}"
		:text " RAM"
		:tooltip "${ram-val}%"
		:labelclass "ram-radial-label"
		:class "ram-radial"))

(defwidget cpu []
	(radialmeter	
		:value "${cpu-val}"
		:text " CPU"
		:tooltip "${cpu-val}%"
		:labelclass "cpu-radial-label"
		:class "cpu-radial"))

(defwidget hdd []
	(radialmeter	
		:value	"${hdd-val}"
		:text " HDD"
		:tooltip "${hdd-val}%"
		:labelclass "cpu-radial-label"
		:class "cpu-radial"))

(defwidget quickbuttons []
	(box :class "roundpannel" :space-evenly "true" :orientation "h"
		(quickbutton :icon "直" :tooltip "" :action "bash scripts/quickbutton.sh wifi" 		:type "wifi")
		(quickbutton :icon ""  :tooltip "" :action "bash scripts/quickbutton.sh bluetooth" :type "bluetooth")
		(quickbutton :icon "ﮖ"  :tooltip "" :action "bash scripts/quickbutton.sh notif" 	:type "notif")
		(quickbutton :icon ""  :tooltip "Lock"  :action "bash scripts/quickbutton.sh lock"  :type "")
		(quickbutton :icon ""  :tooltip "Sleep" :action "bash scripts/quickbutton.sh sleep" :type "")
		;; (quickbutton :icon "" :tooltip "Logout" :action "bash scripts/quickbutton.sh logout" :type "")
))

(defwidget pannel []
	 (box :class "sidepannel" :orientation "v" :space-evenly "false"
		 (box :class "container time" :orientation "h" :space-evenly "true"
			 (time))
		 (box :orientation "h" :space-evenly "true"
			 (cava))
		 (box :class "container" :orientation "v" :space-evenly "false"
			 (box :orientation "h" :space-evenly "true"
				 (player))
			 (box :orientation "h" :space-evenly "false"
			 (settings)
				 (weather))
			 (box :class "roundpannel" :orientation "h" :space-evenly "true"
				 (cpu)
				 (ram)
				 (hdd))
			 (box :orientation "h" :space-evenly "true"
				 (quickbuttons)))
))

(defwindow sidebar
	:monitor 0
	:windowtype "toolbar"
	:geometry (geometry :x "0%"
						:y "8%"
						:width "450px"
						:height "20%")
	:wm-ignore true
	:stacking "fg"
	(pannel))
