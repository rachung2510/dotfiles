(defvar bar-width "40")
(defwidget workspaces []
	(box :class "workspace" :orientation "v" :space-evenly "false" :valign "center"
		(literal :content workspace)
		(label :class "${(ws-mode == "") ? "" : "ws-mode"}" :text ws-mode)
		(box :class "${(ws-scratch > 0) ? "" : "hidden"}" :orientation "v" :space-evenly "false"
			(label :text "")
			(label :class "batt-label" :text ws-scratch))
))

(defwidget lang[]
	(label :class "lang" :text lang-val)
)

(defwidget control []
	(box :orientation "v" 
		 :space-evenly "false"
		 :class "bar-widget control"
		 :width bar-width
		 :spacing "8"
		 (barbtn :icon vol-icon 
		 	:action "~/.config/i3/scripts/fnactions mute"
			:tooltip "Volume: ${volume-val}%
${vol-tooltip}"
			:label "" :font "" :low-crit "" :high-crit "")
		 (barbtn :icon wifi-icon
		 	:action "alacritty -t nmtui -e nmtui-connect &"
			:tooltip wifi-tooltip
			:label "" :font "" :low-crit "" :high-crit "")
		 (barbtn :icon batt-icon
		 	:tooltip batt-tooltip
			:label batt-val :font "batt-icon"
			:low-crit 16 :high-crit 200
			:action "")
		 (barbtn :icon ""
		 	:label bar-cpu-val :font "batt-icon"
			:low-crit 0 :high-crit 89
		 	:action "" :tooltip "")
))

(defwidget time-bar []
	(box :orientation "v" 
		 :class "time-v" 
		 :valign "end"
		 :spacing "0"
	(label :text hour)
	(label :text min :class "time-min")
))

(defwidget top []
	(box
		:orientation "v" 
		:space-evenly "false"
		:vexpand "true"
		:valign "center"
(workspaces)))
(defwidget end []
	(box :orientation "v" 
		 :space-evenly "false" 
		 :vexpand "false"
		 :valign "end" 
		 :spacing 5
(lang)
(control)
(time-bar)))

(defwidget bar []
	(box :class "taskbar" 
		 :orientation "v" 
		 :space-evenly "true"
	(overlay
(top)
(end)
)))

(defwindow bar
	:windowtype "dock"
	:geometry (geometry :x "0" 
						:y "0" 
						:height "100%" 
						:width "0")
	:monitor 0
	:stacking "bg"
	:wm-ignore "true"
(bar))
