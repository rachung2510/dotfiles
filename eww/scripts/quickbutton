#!/bin/bash

pw="root"

notify_bluetooth() {
	details=$(systemctl status bluetooth | grep 'Active:' | grep -oP '(?<=Active: ).*')
	notify-send -u normal -h string:x-dunst-stack-tag:bluetooth -i "~/.config/dunst/img/bluetooth-$1.png" "Bluetooth turned $1" "Status: $details"
}
get_bool() {
	echo $(~/.config/eww/scripts/getbool $1)
}

if [[ $1 = "wifi" ]]; then
	status=$(get_bool $1)
	if [[ $status = "selected" ]]; then
		eww update wifi-bool=""
		eww update wifi-tooltip=""
		nmcli radio wifi off
	else
		eww update wifi-bool="selected"
		eww update wifi-tooltip="$(scripts/tooltip wifi)"
		nmcli radio wifi on
	fi

elif [[ $1 = "bluetooth" ]]; then
	status=$(get_bool $1)
	if [[ $status = "selected" ]]; then
		eww update bluetooth-bool=""
		echo $pw | sudo -S systemctl stop bluetooth
		notify_bluetooth off
	else
		eww update bluetooth-bool="selected"
		echo $pw | sudo -S systemctl start bluetooth
		notify_bluetooth on
	fi
	sleep 1 && eww update vol-tooltip="$(scripts/tooltip vol)"

elif [[ $1 = "notif" ]]; then
	status=$(get_bool $1)
	if [[ $status = "selected" ]]; then
		eww update notif-bool=""
		dunstctl set-paused false
		notify-send -h string:x-dunst-stack-tag:do-not-disturb "Do not disturb disabled" "Notifications will be shown"
	else
		eww update notif-bool="selected"
		dunstctl set-paused true
	fi

elif [[ $1 = "timeout" ]]; then
	status=$(get_bool $1)
	if [[ $status = "" ]]; then
		eww update timeout-bool="selected"
		xset s on -dpms
	else
		eww update timeout-bool=""
		xset s off +dpms
	fi

elif [[ $1 = "lock" ]]; then
	~/.config/i3/scripts/poweractions lock

elif [[ $1 = "sleep" ]]; then
	~/.config/i3/scripts/poweractions "sleep"

elif [[ $1 = "logout" ]]; then
	~/.config/i3/scripts/poweractions "exit"

fi
