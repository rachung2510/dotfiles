#!/bin/bash

if [[ $1 = "vol" ]]; then
	sink=$(pactl get-default-sink)
	if [[ $sink = "bluez"* ]]; then
		id=$(echo $sink | awk -F '[.]' '{print $2}' | tr '_' ':')
		name=$(bluetoothctl info $id | grep "Name:" | awk '{print $2}')
	elif [[ $sink = "alsa_output"* ]]; then
		name=$(pactl list sinks | grep -oP '(?<=Active Port: \[Out\] ).*')
	fi
	echo -e "Output: $name"

elif [[ $1 = "batt" ]]; then
	duration=$(acpi -b | awk -F '[,]' '{print $3}' | awk -F ' ' '{print $1}')
	volt=$(cat /sys/class/power_supply/BAT1/voltage_now)
    curr=$(cat /sys/class/power_supply/BAT1/current_now)
    watt=$(echo "scale=2; ${volt}*${curr}/1000000/1000000" | bc)
	echo -e "Time: ${duration%:*}\nRate: $watt W"

elif [[ $1 = "wifi" ]]; then
	dev="enp4s0f3u2"
	eth=$(nmcli | grep $dev | awk '{print $2}')
	if [[ $eth != "disconnected" ]] && [[ $eth != "" ]]; then
		name=$(nmcli | grep $dev | head -n 1 | grep -oP '(?<=connected to).*')
	else
		name=$(iwgetid -r)
		dev="wlan0"
	fi
	if [[ $name != "" ]]; then
		ip=$(ip addr show dev $dev | grep "inet " | awk '{print $2}')
		echo -e "Network: $name\nIP: $ip"
	fi

elif [[ $1 = "sync" ]]; then
	get_sync_icon() {
		echo $(~/.config/eww/scripts/geticon sync $1)
	}
	case "$(eww get sync-icon)" in
		"$(get_sync_icon syncing)")	echo "Syncing...";;
		"$(get_sync_icon off)")		echo "Cloud unavailable";;
		"$(get_sync_icon)")
			tic=$(eww get sync-start)
			[[ $tic = 0 ]] && exit 0
			toc=$(eww get sync-next)
			[[ $toc = 0 ]] &&
				echo -e "Last synced on $(date -d@$tic '+%H:%M')" ||
				echo -e "Last synced on $(date -d@$tic '+%H:%M')\nNext sync at $(date -d@$toc '+%H:%M')"
		;;
	esac

fi
